{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","handleChange","placeholder","className","type","onChange","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","catch","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAExC,OACE,uBACEC,UAAU,SACVC,KAAK,SACLF,YAAaA,EACbG,SAAUJ,MCPHK,G,YAAO,SAACC,GAEnB,OACE,sBAAKJ,UAAU,iBAAf,UACE,qBACEK,IAAI,UACJC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BAEL,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCRXC,EAAW,SAACP,GAEvB,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAAMQ,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCuCZM,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAiBFhB,aAAe,SAACiB,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QAAS,WAC7CC,QAAQC,IAAI,6CAA8C,EAAKC,WAlBjE,EAAKA,MAAQ,CACXV,SAAU,GACVK,YAAa,IAJH,E,gEAOO,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,OADAP,QAAQC,IAAIM,GACL,EAAKX,SAAS,CAAEJ,SAAUe,IAAS,kBACxCP,QAAQC,IAAI,mCAAoC,EAAKC,aAGxDM,OAAM,SAACb,GAAD,OAAOK,QAAQC,IAAIN,Q,+BAOrB,MAE2Bc,KAAKP,MAA/BV,EAFD,EAECA,SAAUK,EAFX,EAEWA,YACZa,EAAkBlB,EAASmB,QAAO,SAACxB,GAAD,OACtCA,EAAQE,KAAKuB,cAAcC,SAAShB,EAAYe,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEF,aAAc+B,KAAK/B,aACnBC,YAAa,mBAEf,cAAC,EAAD,CAAUa,SAAUkB,W,GArCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b31cd16.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ handleChange, placeholder }) => {\n  //pipeline2\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n","import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => {\n  //pipeline3\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x200`}\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => {\n  //pipeline2\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport { CardList } from \"./components/card-list/card-list.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        console.log(users);\n        return this.setState({ monsters: users }, () =>\n          console.log(\"this is state//monsters: users :\", this.state)\n        );\n      })\n      .catch((e) => console.log(e));\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value }, () => {\n      console.log(\"this is state//searchField: e.target.value\", this.state);\n    });\n  };\n  render() {\n    //pipeline1\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          handleChange={this.handleChange}\n          placeholder={\"search monster\"}\n        />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}